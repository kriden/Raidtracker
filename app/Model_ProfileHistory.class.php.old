<?PHP

class Model_ProfileHistory {
	
	public function __construct($profileList) {
		$this->profiles = $profileList;
	}

	public function dto() {
		$timeline = array();
		$prevProfile = null;
		foreach($this->profiles as $profile) {
			if(!$prevProfile) $prevProfile = $profile;

			$historyDTO = array(
				"timestamp" => floatval($profile->lastModified),
				"averageItemLevel" => $profile->getItemLevel(),
				"averageItemLevelEquipped" => $profile->getEquippedItemLevel(),
				"averageItemLevelDelta" => $profile->getItemLevel() - $prevProfile->getItemLevel(),
				"averageItemLevelEquippedDelta" => $profile->getEquippedItemLevel() - $prevProfile->getEquippedItemLevel(),
				"itemsDiff" => $this->arrayRecursiveDiff($profile->getItems(), $prevProfile->getItems()),
				"formattedDate" => date("d-M-Y", floatval($profile->lastModified)/1000)
			);
			$timeline[] = $historyDTO;
			$prevProfile = $profile;
		}

		return $timeline;
	}
		
	private function arrayRecursiveDiff($aArray1, $aArray2) { 
	    $aReturn = array(); 
	   
	    foreach ($aArray1 as $mKey => $mValue) { 
	        if (array_key_exists($mKey, $aArray2)) { 
	            if (is_array($mValue)) { 
	                $aRecursiveDiff = $this->arrayRecursiveDiff($mValue, $aArray2[$mKey]); 
	                if (count($aRecursiveDiff)) { $aReturn[$mKey] = $aRecursiveDiff; } 
	            } else { 
	                if ($mValue != $aArray2[$mKey]) { 
	                    $aReturn[$mKey] = $mValue; 
	                } 
	            } 
	        } else { 
	            $aReturn[$mKey] = $mValue; 
	        } 
	    } 
	   
	    return $aReturn; 
	} 

}